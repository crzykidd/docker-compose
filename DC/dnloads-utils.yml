services:
  dozzle:
    container_name: dozzle
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOZZLE_REMOTE_AGENT=192.168.20.210:7007
    ports:
      - 8080:8080
    labels:
      - "cloudflare.tunnel.enable=true"
      - "cloudflare.tunnel.hostname=dc-dozzle.crzynet.com"
      - "cloudflare.tunnel.service=http://dozzle:8080"
      - "cloudflare.tunnel.access.policy=authenticate"
      - "cloudflare.tunnel.access.name=dc-dozzle"          
      - dockernotifier.notifiers=service-tracker-dashboard
      - dockernotifier.std.internalurl=http://192.168.20.91:8080
      - dockernotifier.std.internal.health=true
      - dockernotifier.std.externalurl=https://dc-dozzle.crzynet.com/
      - dockernotifier.std.external.health=true
      - dockernotifier.std.group=Utilities
      - dockernotifier.std.sort.priority=4
    networks:
      - proxy     

# START DOCKFLARE BLOCK
  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy:v0.4.1
    container_name: docker-socket-proxy
    restart: unless-stopped
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
      - CONTAINERS=1
      - EVENTS=1
      - NETWORKS=1
      - IMAGES=1
      - POST=1
      - PING=1
      - INFO=1
      - EXEC=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - dockflare-internal

  dockflare-init:
    image: alpine:3.20
    command: ["sh", "-c", "chown -R 65532:65532 /app/data"]
    volumes:
      - /var/docker/dockflare/data:/app/data
    networks:
      - dockflare-internal
    restart: "no"

  dockflare:
    image: alplat/dockflare:stable
    container_name: dockflare
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.dockflare.rule=Host(`dc-dockflare.crzynet.com`)"
      - "traefik.http.routers.dockflare.tls=true"
      - "traefik.http.services.dockflare.loadbalancer.server.port=5000" 
    
      - dockernotifier.notifiers=service-tracker-dashboard
      - dockernotifier.std.internalurl=https://ar-dockflare.crzynet.com/
      - dockernotifier.std.internal.health=true
      - dockernotifier.std.group=docker-utils
      - dockernotifier.std.sort.priority=1

    ports:
      - "5000:5000"
    volumes:
      - /var/docker/dockflare/data:/app/data
    environment:
      - REDIS_URL=redis://redis:6379/0
      - REDIS_DB_INDEX=0  # Optional: specify Redis database index (0-15) for isolation from other containers
      - DOCKER_HOST=tcp://docker-socket-proxy:2375
    depends_on:
      docker-socket-proxy:
        condition: service_started
      dockflare-init:
        condition: service_completed_successfully
      redis:
        condition: service_started
    networks:
      - cloudflare-net
      - dockflare-internal
      - proxy

  redis:
    image: redis:7-alpine
    container_name: dockflare-redis
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    volumes:
      - /var/docker/dockflare/redis:/data
    networks:
      - dockflare-internal

networks:
  cloudflare-net:
    name: cloudflare-net
    external: true
  proxy:
    external: true
  dockflare-internal:
    name: dockflare-internal      


